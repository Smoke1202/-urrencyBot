import json
import requests
from config import keys

class ConvertionException(Exception):
    pass

class CryptoConverter:
    @staticmethod
    def convert(quote: str, base: str, amount: int):
        if quote.lower() == base.lower():
            raise ConvertionException(f'–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –≤–∞–ª—é—Ç—ã —ç—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ ü§Ø')
        try:
            quote_ticker = keys[quote.lower()]
        except KeyError:
            raise ConvertionException(f'–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤–∞–ª—é—Ç—É {quote} –º—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–ºüòî')

        try:
            base_ticker = keys[base.lower()]
        except KeyError:
            raise ConvertionException(f'–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤–∞–ª—é—Ç—É {base} –º—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–ºüòî')

        try:
            amount = float(amount)
        except ValueError:
            raise ConvertionException(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {amount} üòî')

        r = requests.get(f'https://min-api.cryptocompare.com/data/price?fsym={quote_ticker}&tsyms={base_ticker}')
        total_base = json.loads(r.content)[base_ticker] * amount
        total_base = round(total_base, 5)
        return total_base