import telebot
from Utils import ConvertionException, CryptoConverter
from config import TOKEN, CryptoCurr, Curr, icons


bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start', 'help'])
def activate_test(message: telebot.types.Message):
    bot.reply_to(message, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π {message.chat.username}\n–Ø –±–æ—Ç-–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä, —è —É–º–µ—é –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –≤–∞–ª—é—Ç—É –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É.'
    f'–î–ª—è —Å–ø–∏—Å–∫–∞ –ø–æ–ø—É–ª—è—Ä—Ç—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /cryptocurrency, –∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –≤–∞–ª—é—Ç—ã –≤–≤–µ–¥–∏—Ç–µ /currency.\n'
    f'–ß—Ç–æ–±—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n'
    f'      <–∏–º—è –≤–∞–ª—é—Ç—ã> \n'
    f'      <–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏>  \n'
    f'      <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π –≤–∞–ª—é—Ç—ã> \n'
    f'–ù–∞–ø—Ä–∏–º–µ—Ä: USD RUB 100. –ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å –∑–∞–≥–ª–∞–≤–Ω—ã—Öü§ó')


@bot.message_handler(commands=['currency'])
def values(message: telebot.types.Message):
    text = '\n'
    for key in Curr.values():
        text = '\n'.join((text, key,))
    bot.reply_to(message, text)


@bot.message_handler(commands=['cryptocurrency'])
def values(message: telebot.types.Message):
    text = '\n'
    for key in CryptoCurr.values():
        text = '\n'.join((text, key, ))
    bot.reply_to(message, text)


@bot.message_handler(content_types=['text', ])
def convert(message: telebot.types.Message):
    try:
        values = message.text.split(' ')

        if len(values) != 3:
            raise ConvertionException('–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ 2 –≤–∞–ª—é—Ç—ã –∏ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å')

        quote, base, amount = values
        total_base = CryptoConverter.convert(*values)
        if float(amount) < 0:
            raise ConvertionException(f'')

    except Exception as e:
        bot.reply_to(message, f'–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –º—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —ç—Ç–∏ –≤–∞–ª—é—Ç—ã\n{e}')
    else:
        text = "{:f}".format(total_base) + f'  {icons.get(base.upper())}'

        bot.send_message(message.chat.id, text)




bot.polling()
